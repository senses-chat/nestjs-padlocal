// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PadlocalAccount {
  id        Int      @id @default(autoincrement())
  token     String
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)

  @@index([token])
}

model KeyValueStorage {
  namespace String
  key       String
  value     String
  expires   Int?
  createdAt DateTime @default(now()) @db.Timestamptz(6)

  @@unique([namespace, key])
  @@index([namespace])
  @@index([namespace, key])
}

model WechatContact {
  id                    Int     @id @default(autoincrement())
  sourceUsername        String
  username              String
  nickname              String
  gender                Int
  avatar                String?
  signature             String?
  alias                 String?
  label                 String?
  remark                String?
  city                  String?
  province              String?
  country               String?
  contactaddscene       Int
  stranger              Boolean
  encryptusername       String?
  phoneList             Json?
  chatroomownerusername String?
  chatroommaxcount      Int
  chatroommemberList    Json?

  @@unique([sourceUsername, username])
  @@index([sourceUsername, username])
  @@index([username])
}

model WechatFriendshipRequest {
  id                    Int     @id @default(autoincrement())
  sourceUsername        String
  username              String
  encryptUsername       String
  nickname              String
  ticket                String
  requestMessage        String
  scene                 Int
  avatar                String?
  gender                Int?
  alias                 String?
  city                  String?
  province              String?
  country               String?
  payload               Json

  createdAt DateTime @default(now()) @db.Timestamptz(6)
}

model rawMessage {
  id                    String  @id
  accountId             Int
  type Int
  createtime            Int
  fromusername          String
  tousername            String
  content               String
  pushcontent           String
  binarypayload         String
  atList                String[]
}

model newMessage {
  accountId             Int
  id                    String  @id
  createTime            String
  chatroom              String
  fromUsername          String
  toUsername            String
  atList                String[]
  content               Json
}